/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ordering.system;

import java.io.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Asus
 */
public class SelectOrder extends javax.swing.JFrame {
    ArrayList<Order> order = new ArrayList<Order>();
    ArrayList<Customer> customer = new ArrayList<>();
    
    ArrayList<String> shopList = new ArrayList<>();
    ArrayList<String> dishList1 = new ArrayList<>();
    ArrayList<String> dishList2 = new ArrayList<>();
    ArrayList<String> dishList3 = new ArrayList<>();
    
    String[] shopListforCombo; String[] dishList1forCombo; String[] dishList2forCombo; String[] dishList3forCombo;
    
    
    
    
    
    /**
     * Creates new form SelectOrder
     */
    public SelectOrder() {
        initComponents();
        
        populateShopList();
        //shopList for shopName combo box
        shopListforCombo = new String[shopList.size()];
        dishList1forCombo = new String[dishList1.size()];
        dishList2forCombo = new String[dishList1.size()];
        dishList3forCombo = new String[dishList1.size()];
        
        //since all same size, so use one for-loop , else split out
        for(int i = 0; i< shopList.size() ; i++){
            shopListforCombo[i] = shopList.get(i);
            dishList1forCombo[i] = dishList1.get(i);
            dishList2forCombo[i] = dishList2.get(i);
            dishList3forCombo[i] = dishList3.get(i);
        }
         
        //initial look
        shopName.setModel(new javax.swing.DefaultComboBoxModel<>(shopListforCombo));
        dishName.setModel(new javax.swing.DefaultComboBoxModel<>());
        
        populateArrayList();
        
    }
    
    public void populateShopList(){
        //list of shops
        shopList.add("Crusty Crab");
        shopList.add("Phum Bucket");
        shopList.add("Burger Krusty");
        
        //list of dish for Crusty Crab
        dishList1.add("Crabby Patty");
        dishList1.add("Crabby Meal");
        dishList1.add("Sailors Surprise");
        
        //list of dish for Phum Bucket
        dishList2.add("Phum Burger");
        dishList2.add("Phum Fries");
        dishList2.add("Phum Pie");
        
        //list of dish for Burger Krusty
        dishList3.add("The Klogger");
        dishList3.add("Fish Sandwich");
        dishList3.add("Twisty Lard");
    }
    
    // read all data from files first before adding new records
    public void populateArrayList(){
        
        try{
            ObjectInputStream input = new ObjectInputStream (new FileInputStream ("Customer.dat"));
            
            while(true){
                
                //try to read that file and ADD into ArrayList 
                // and converting to Customer object
                // because: ArrayList<Customer> customer
                customer.add((Customer)(input.readObject()));
            }
            
            }catch(EOFException e){}
            catch(ClassNotFoundException f){
                 JOptionPane.showMessageDialog(null, f.getMessage());
            }
            catch (IOException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        
        try{
            ObjectInputStream input1 = new ObjectInputStream (new FileInputStream ("Order.dat"));
            
            while(true){
                
                //try to read that file and ADD into ArrayList 
                // and converting to Customer object
                // because: ArrayList<Customer> customer
                order.add((Order)(input1.readObject()));
            }
            
            }catch(EOFException e){}
            catch(ClassNotFoundException f){
                 JOptionPane.showMessageDialog(null, f.getMessage());
            }
            catch (IOException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    
    public void saveRecordsToFile(){
        try{
            ObjectOutputStream output = new ObjectOutputStream (new FileOutputStream("Order.dat"));
            
            for(int i = 0; i < order.size(); i++){
                output.writeObject(order.get(i));
                }
            
            output.close();
            JOptionPane.showMessageDialog(null, "Successfully saved."); 
            
        }catch(EOFException e){}
        
        catch(IOException i){
            JOptionPane.showMessageDialog(null, i.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        shopName = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        dishName = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocation(new java.awt.Point(500, 250));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 102));
        jLabel1.setText("Order details:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jLabel2.setText("Pick a restaurant");

        shopName.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        shopName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        shopName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shopNameActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jLabel3.setText("Pick a dish");

        dishName.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        dishName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 102));
        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(dishName, 0, 342, Short.MAX_VALUE)
                    .addComponent(shopName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(283, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(shopName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dishName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void shopNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shopNameActionPerformed
        if (shopName.getSelectedIndex()== 0){
            dishName.setModel(new javax.swing.DefaultComboBoxModel<>(dishList1forCombo));
        } 
        
        if (shopName.getSelectedIndex()== 1){
            dishName.setModel(new javax.swing.DefaultComboBoxModel<>(dishList2forCombo));
        }  
        
        if (shopName.getSelectedIndex()== 2){
            dishName.setModel(new javax.swing.DefaultComboBoxModel<>(dishList3forCombo));
        }  
        
    }//GEN-LAST:event_shopNameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if( shopName.getSelectedIndex()== -1 || dishName.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(null,"Please select all fields! ");
        }
        else{
            String custName = customer.get(customer.size()-1).getName();
            String custAddress = customer.get(customer.size()-1).getAddress();
            String shopChosen = shopList.get(shopName.getSelectedIndex());
            String dishChosen="";


            if (shopChosen.equalsIgnoreCase("Crusty Crab")){
                dishChosen = dishList1.get(dishName.getSelectedIndex());
            }
            else if (shopChosen.equalsIgnoreCase("Phum Bucket")){
                dishChosen = dishList2.get(dishName.getSelectedIndex());
            }
            else if (shopChosen.equalsIgnoreCase("Burger Krusty")){
                dishChosen = dishList3.get(dishName.getSelectedIndex());
            }
            
            Order orderMade = new Order (custName,custAddress,shopChosen, dishChosen);
            order.add(orderMade);
            
            saveRecordsToFile();
            
            this.dispose();
            new Notice().setVisible(true);
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SelectOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> dishName;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox<String> shopName;
    // End of variables declaration//GEN-END:variables
}
